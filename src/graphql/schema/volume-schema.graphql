extend type Query {
	volume(name: ID!): Volume
	volumes: [Volume!]!
}

extend type Mutation {
	createVolume(name: ID!): VolumeResult!
	updateVolume(input: UpdateVolumeInput!): UpdateVolumeResult!
	deleteVolume(name: ID!): VolumeResult
	addFlavorVolume(input: FlavorVolumeInput!): FlavorVolumeResult!
	removeFlavorVolume(input: FlavorVolumeInput!): FlavorVolumeResult!
}

type Volume {
	name: ID!
}

type VolumeResult {
	success: Boolean!
	volume: Volume!
	message: String
}

type UpdateVolumeResult {
	success: Boolean!
	volume: Volume!
	previousVolume: Volume!
}

type FlavorVolumeResult {
	success: Boolean!
	volume: Volume!
	flavor: Flavor!
}

input FlavorVolumeInput {
	flavor: ID!
	volume: ID!
}

input UpdateVolumeInput {
	name: ID!
	updatedName: ID!
}
