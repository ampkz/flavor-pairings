extend type Query {
	weight(name: ID!): Weight
	weights: [Weight!]!
}

extend type Mutation {
	createWeight(name: ID!): WeightResult!
	updateWeight(input: UpdateWeightInput!): UpdateWeightResult!
	deleteWeight(name: ID!): WeightResult
	addFlavorWeight(input: FlavorWeightInput!): FlavorWeightResult!
	removeFlavorWeight(input: FlavorWeightInput!): FlavorWeightResult!
}

type Weight {
	name: ID!
}

type WeightResult {
	success: Boolean!
	weight: Weight!
	message: String
}

type UpdateWeightResult {
	success: Boolean!
	weight: Weight!
	previousWeight: Weight!
	message: String
}

type FlavorWeightResult {
	success: Boolean!
	weight: Weight!
	flavor: Flavor!
}

input FlavorWeightInput {
	flavor: ID!
	weight: ID!
}

input UpdateWeightInput {
	name: ID!
	updatedName: ID!
}
